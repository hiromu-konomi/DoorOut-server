"""empty message

Revision ID: dd6b704e4090
Revises: 
Create Date: 2021-03-09 10:39:58.912658

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = 'dd6b704e4090'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tags',
    sa.Column('tag_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('tag_name', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=1), nullable=False),
    sa.PrimaryKeyConstraint('tag_id')
    )
    op.create_table('users',
    sa.Column('user_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('account_id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('user_image_path', sa.String(length=255), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('last_login_date', sa.DateTime(), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('account_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('excluded_coordinates',
    sa.Column('excluded_coordinate_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('user_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('latitude', sa.Text(), nullable=False),
    sa.Column('longitude', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=1), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('excluded_coordinate_id')
    )
    op.create_table('followers',
    sa.Column('follower_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('followed_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.ForeignKeyConstraint(['followed_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['follower_id'], ['users.user_id'], )
    )
    op.create_table('posts',
    sa.Column('post_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('user_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('content', sa.String(length=255), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('post_type', sa.String(length=1), nullable=False),
    sa.Column('place_name', sa.String(length=255), nullable=False),
    sa.Column('comment_counts', sa.Integer(), nullable=False),
    sa.Column('like_counts', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=1), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('post_id')
    )
    op.create_table('comments',
    sa.Column('comment_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('post_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('parent_comment_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('content', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=1), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['parent_comment_id'], ['comments.comment_id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['posts.post_id'], ),
    sa.PrimaryKeyConstraint('comment_id')
    )
    op.create_table('likes',
    sa.Column('like_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('post_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('user_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=1), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.post_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('like_id')
    )
    op.create_table('post_coordinates',
    sa.Column('coordinate_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('post_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('latitude', sa.Text(), nullable=False),
    sa.Column('longitude', sa.Text(), nullable=False),
    sa.Column('load_index', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=1), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.post_id'], ),
    sa.PrimaryKeyConstraint('coordinate_id')
    )
    op.create_table('post_image_paths',
    sa.Column('post_image_path_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('post_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('post_image_path', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=1), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.post_id'], ),
    sa.PrimaryKeyConstraint('post_image_path_id')
    )
    op.create_table('posts_tags',
    sa.Column('post_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('tag_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['posts.post_id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.tag_id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('posts_tags')
    op.drop_table('post_image_paths')
    op.drop_table('post_coordinates')
    op.drop_table('likes')
    op.drop_table('comments')
    op.drop_table('posts')
    op.drop_table('followers')
    op.drop_table('excluded_coordinates')
    op.drop_table('users')
    op.drop_table('tags')
    # ### end Alembic commands ###
